@model prj_Traveldate_Core.Models.MyModels.COrderState
@{
    ViewData["Title"] = "List";
}

<!-- Page Wrapper -->
<div id="wrapper">

    <!-- Sidebar -->
    <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

        <!-- Sidebar - Brand -->
        <div class="sidebar-brand d-flex align-items-center justify-content-center">
            <div class="sidebar-brand-icon">
                <img src="~/icons/navigation.png" class="icon" id="sidebarToggleTop" />
            </div>
            <div class="sidebar-brand-text mx-3 nav-menu">主選單</div>
        </div>

        <!-- Divider -->
        <hr class="sidebar-divider my-0">

        <!-- Nav Item - Dashboard -->
        <li class="nav-item">
            <a class="nav-link" href="~/Dashboard/List">
                <img src="~/icons/home.png" class="subicon" />
                <span>首頁</span>
            </a>
        </li>

        <!-- Divider -->
        <hr class="sidebar-divider">

        <!-- Nav Item - Pages Collapse Menu -->
        <li class="nav-item">
            <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseCompany"
               aria-expanded="true" aria-controls="collapseCompany">
                <img src="~/icons/company.png" class="subicon" />
                <span>供應商專區</span>
            </a>
            <div id="collapseCompany" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
                <div class="bg-white py-2 collapse-inner rounded">
                    <a class="collapse-item" href="~/Company/Edit">帳號管理</a>
                    <a class="collapse-item" href="~/Company/Password">更改密碼</a>
                </div>
            </div>
        </li>
        <!-- Divider -->
        <hr class="sidebar-divider">
        <!-- Nav Item - Utilities Collapse Menu -->
        <li class="nav-item">
            <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseUtilities"
               aria-expanded="true" aria-controls="collapseUtilities">
                <img src="~/icons/edit.png" class="subicon" />
                <span>商品管理</span>
            </a>
            <div id="collapseUtilities" class="collapse" aria-labelledby="headingUtilities"
                 data-parent="#accordionSidebar">
                <div class="bg-white py-2 collapse-inner rounded">
                    <a class="collapse-item" href="~/Product/List">商品列表</a>
                    <a class="collapse-item" href="~/Product/Create">新增商品</a>
                    <a class="collapse-item" href="~/Trip/List">商品行程</a>
                </div>
            </div>
        </li>
        <li class="nav-item">
            <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseAnalyze"
               aria-expanded="true" aria-controls="collapseAnalyze">
                <img src="~/icons/company.png" class="subicon" />
                <span>數據分析</span>
            </a>
            <div id="collapseAnalyze" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
                <div class="bg-white py-2 collapse-inner rounded">
                    <a class="collapse-item" href="~/Analysis/SellAnalysis">銷售分析</a>
                </div>
            </div>
        </li>

    </ul>
    <!-- End of Sidebar -->
    <!-- Content Wrapper -->
    <div id="content-wrapper" class="d-flex flex-column">

        <!-- Main Content -->
        <div id="content">

            <!-- Begin Page Content -->
            
            <div class="container-fluid">
                <h2>首頁</h2>
                <div class="row">
                    
                        <!-- Earnings (Monthly) Card Example -->
                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card border-left-primary shadow h-100 py-2">
                                <div class="card-body">
                                    <div class="row no-gutters align-items-center">
                                        <div class="col mr-2">
                                            <div class="cardTitle font-weight-bold text-primary text-uppercase mb-1">
                                                訂單數量
                                            </div>
                                            <div class="h5 mb-0 font-weight-bold text-gray-800 cardContent"> @Html.DisplayFor(modelItem => modelItem.orderQuantity)</div>
                                        </div>
                                        <div class="col-auto">
                                            <i class="fas fa-calendar fa-2x text-gray-300"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Earnings (Monthly) Card Example -->
                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card border-left-success shadow h-100 py-2">
                                <div class="card-body">
                                    <div class="row no-gutters align-items-center">
                                        <div class="col mr-2">
                                            <div class="cardTitle font-weight-bold text-success text-uppercase mb-1">
                                                訂單總價
                                            </div>
                                            <div class="h5 mb-0 font-weight-bold text-gray-800 cardContent">@Html.DisplayFor(modelItem => modelItem.turnover)</div>
                                        </div>
                                        <div class="col-auto">
                                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    
                    
                        <!-- Earnings (Monthly) Card Example -->
                        <div class="col-xl-6 col-md-6 mb-4">
                            <div class="card border-left-info shadow h-100 py-2">
                                <div class="card-body">
                                    <div class="row no-gutters align-items-center">
                                        <div class="col mr-2">
                                            <div class="cardTitle font-weight-bold text-success text-uppercase mb-1">
                                                熱銷前三
                                            </div>
                                            @foreach (string p in Model.top3product)
                                            {
                                                <div class="h5 mb-0 font-weight-bold text-gray-800 cardContent">@p</div>
                                                <hr />
                                            }
                                        </div>
                                        <div class="col-auto">
                                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    
                
                
                    
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="card shadow mb-4">
                            <div class="card-header py-3">
                                <h6 class="m-0 font-weight-bold text-primary">搜尋</h6>
                            </div>
                            <div class="card-body">
                              
                                <div>
                                    <label>產品類型</label>
                                    <select id="selecttype" class="form-select">
                                        @foreach (ProductTypeList type in Model.types)
                                        {
                                            <option  value="@type.ProductTypeId">@type.ProductType</option>
                                        }
                                    </select>
                                    <label>日期範圍</label>
                                    <input type="text" id="dashboardcalendar" class="form-control" />
                                    
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                       <div class="row">
                <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary cardTitle">訂單概況</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                            <table class="display" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>產品日期</th>
                            <th>產品類型</th>
                            <th>訂購會員Email</th>
                            <th>產品名稱</th>
                            <th>庫存/剩餘人數</th>
                        </tr>
                    </thead>
                    
                    <tbody id="dashboard">
                       
                        @foreach (var item in Model.ProductDetail) {
                                <tr>
                                    <td>
                                                <div> @Html.DisplayFor(modelItem => item.productDate)</div>
                                         </td>
                                     <td>
                                                <div> @Html.DisplayFor(modelItem => item.productType) </div>
                                     </td>
                                    <td>
                                        <div>@Html.DisplayFor(modelItem => item.Email) </div>
                                        
                                    </td>
                                    <td>
                                        <div>@Html.DisplayFor(modelItem => item.productName)</div>
                                    </td>
                                    <td>
                                        <div> @Html.DisplayFor(modelItem => item.stock)</div>
                                    </td>
                                     
                                </tr>
                            }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
                </div>


            </div>
            <!-- /.container-fluid -->

          </div>
        <!-- End of Main Content -->


    </div>
    <!-- End of Content Wrapper -->

</div>
<!-- End of Page Wrapper -->
@section Styles{
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" />
}
@section Scripts{
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script> 
        new DataTable('#dataTable');
    $('#dashboardcalendar').flatpickr({
            mode: "range",
            dateFormat: "Y-m-d"
         });
    </script>
    <script>
               
        async function queryByType(typeID) {
            const dashboard = document.getElementById('dashboard');
            const response = await fetch(`@Url.Content("~/Dashboard/queryByType")?typeID=${typeID}`);
            const datas = await response.json();
            if (datas != null) 
            {
                const rows = datas.map(row => {
                    const { productName, productDate, email, stock, productType } = row
                    return(
                        ` <tr>
                                                      <td>${productDate}</td>
                                                       <td>${productType}</td>
                                                <td>${email}</td>
                                                        <td>${productName}</td>
                                                        <td>${stock}</td>
                         </tr>`
                    )

                })
                dashboard.innerHTML = rows.join("");
            }
        }

        async function queryByDate(dates) {
            const dashboard = document.getElementById('dashboard');
            const response = await fetch(`@Url.Content("~/Dashboard/queryByDate")?dates=${dates}`);
            const datas = await response.json();
            if (datas != null) {
                const rows = datas.map(row => {
                    const { productName, productDate, email, stock, productType } = row
                    return (
                        ` <tr>
                                                              <td>${productDate}</td>
                                                               <td>${productType}</td>
                                                        <td>${email}</td>
                                                                <td>${productName}</td>
                                                                <td>${stock}</td>
                                 </tr>`
                    )

                })
                dashboard.innerHTML = rows.join("");
            }
        }

        $('#selecttype').change(function () {
            var typeID = $(this).val();
            queryByType(typeID);
        });

        var inputValue = ""; // 用于存储输入的值
        var changeCount = 0; // 用于计数值改变的次数

        $('#dashboardcalendar').change(function () {

            var currentInputValue = $(this).val();

            // 检查当前值是否与之前的值不同
            if (currentInputValue !== inputValue) {
                changeCount++; // 值改变次数加1
                inputValue = currentInputValue; // 更新存储的值

                // 当值改变两次时触发事件
                if (changeCount === 2) {
                    var dates = $(this).val();
                    queryByDate(dates);

                    // 在这里执行其他操作，根据输入的值进行不同的处理

                    // 重置计数器，以便下一次触发事件
                    changeCount = 0;
                }
            }
            
            
        });


    </script>
}

