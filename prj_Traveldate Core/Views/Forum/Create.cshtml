@model List<Trip>
@{
    ViewData["Title"] = "Create";
}
@section Styles{
    
}
<div class="row justify-content-center pb-4">
    <div class="col-10 bg-white rounded-3 p-4">
        <h2 class="pl-2 pr-2 my-text-primary fw-bolder">發表文章</h2>
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group fs-5">
                <label class="control-label"></label>
                <input class="form-control" />
                @*<span asp-validation-for="Title" class="text-danger"></span>*@
            </div>
            <p class="fs-5">選擇商品與日期</p>
            <div class="d-flex">
                <div class="form-group col-5 pl-0">
                    @* <input name="txtKeyword" class="form-select form-select-md" id="selectTrip" placeholder="請選擇商品"> *@
                   @*  <div class="grid gap-3 col d-flex" id="divTrip"> *@
                    <input class="form-control" list="tripOpts" id="selectTrip" placeholder="請選擇商品">
                    <datalist id="tripOpts">
                            
                    </datalist>
                </div>
                
                <div class="form-group col-4 ">
                    <select id="selectDate" class="form-select form-select-md mb-3" aria-label="Large select example">
                        <option selected >請選擇日期</option>
                        <option value="1">One</option>
                        <option value="2">Two</option>
                        <option value="3">Three</option>
                    </select>
                </div>
                <div>
                    <span id="price">$799</span>
                    <span id="test"></span>
                </div>
                <div class="form-group col-2">
                    <input type="button" value="確定" class="btn btn-secondary" />
                </div>
            </div>

            <div class="form-group col-5 pl-0 fs-5">
                <label class="control-label">截團日期</label>
                <input class="form-control" />
                
            </div>
            <div class="form-group fs-5">
                <label class="control-label"></label>
                <textarea class="form-control content-input"></textarea>
                
            </div>
            <div class="form-group d-flex justify-content-between">
                <div class="insert-photo-container">
                    <img class="insert-photo-gif" src="~/icons/icons8-photo.gif" />
                    <img class="insert-photo-static" src="~/icons/icons8-photo-64.png" />
                </div>
                <div class="d-flex align-items-center">
                    <input type="submit" value="捨棄" class="btn btn-secondary h-75 ml-1" />
                    <input type="submit" value="儲存草稿" class="btn btn-secondary h-75 ml-1" />
                    <input id="payment-area" type="submit" value="下一步" class="btn btn-secondary h-75 ml-1" />
                </div>
            </div>
            <div class="border border-black">
                付款區
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="ForumList" class="fs-5 my-text-primary fw-bolder">返回文章列表</a>
</div>
<button id="btn-test"></button>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // const btntest = document.querySelector('#btn-test');
         const selectTrip = document.querySelector('#selectTrip');
        const tripOpts = document.querySelector('#tripOpts');
       
        selectTrip.addEventListener('focus',()=>{
            loadTrips();
        })
      
        async function loadTrips(){
                const resopnse = await fetch('@Url.Content("~/Forum/selectTrips")')
                const datas = await resopnse.json();
                if (datas != null) {
                const trip = datas.map(trip => `<option id="selTrip" value="${trip}">${trip}</option>`)
                tripOpts.innerHTML = trip.join("");
                }
            }
       
        const selTrip = document.querySelector('#selTrip');
        const testElement = document.querySelector('#test');

        selTrip.addEventListener('change',() => {
            const selectedOption = selTrip.options[selTrip.selectedIndex];
            testElement.textContent = selectedOption.textContent;
        });
                  // selectTrip.addEventListener('input', () => {
                //      KeywordMatch();
                // })
        // async function KeywordMatch() {
        //     const resopnse = await fetch(`@Url.Content("~/Forum/selectTrips")?txtKeyword=${selectTrip.value}`)
        //     const datas = await resopnse.json();
        //     if (datas != null) {
        //         const trip = datas.map(trip => `<li class="list-group-item list-group-item-action border p-2">${trip}</li>`)
        //         divTrip.innerHTML = trip.join("");
        //     }
        // }

        // async function loadTripsWithKeyword() {
        //     const resopnse = await fetch(`@Url.Content("~/Forum/selectTrips")`)
        //     const datas = await resopnse.json();
        //     if (datas != null) {
        //         const trip = datas.map(trip => `<li class="list-group-item list-group-item-action border p-2">${trip}</li>`)
        //         divTrip.innerHTML = trip.join("");
        //     }
        // }
        

        // btntest.addEventListener('click',()=>loadTrips())
    </script>
}

