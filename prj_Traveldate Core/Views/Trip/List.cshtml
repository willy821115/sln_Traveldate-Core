@model prj_Traveldate_Core.ViewModels.CTripViewModel

@{
    ViewData["Title"] = "List";
}
<!-- Page Wrapper -->
<div id="wrapper">

    <!-- Sidebar -->
    <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

        <!-- Sidebar - Brand -->
        <div class="sidebar-brand d-flex align-items-center justify-content-center">
            <div class="sidebar-brand-icon">
                <img src="~/icons/navigation.png" class="icon" id="sidebarToggleTop" />
            </div>
            <div class="sidebar-brand-text mx-3 nav-menu">主選單</div>
        </div>

        <!-- Divider -->
        <hr class="sidebar-divider my-0">

        <!-- Nav Item - Dashboard -->
        <li class="nav-item">
            <a class="nav-link" href="~/Dashboard/List">
                <img src="~/icons/home.png" class="subicon" />
                <span>首頁</span>
            </a>
        </li>

        <!-- Divider -->
        <hr class="sidebar-divider">

        <!-- Nav Item - Pages Collapse Menu -->
        <li class="nav-item">
            <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseCompany"
               aria-expanded="true" aria-controls="collapseCompany">
                <img src="~/icons/company.png" class="subicon" />
                <span>供應商專區</span>
            </a>
            <div id="collapseCompany" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
                <div class="bg-white py-2 collapse-inner rounded">
                    <a class="collapse-item" href="~/Company/Edit">帳號管理</a>
                    <a class="collapse-item" href="~/Company/Password">更改密碼</a>
                </div>
            </div>
        </li>
        <!-- Divider -->
        <hr class="sidebar-divider">
        <!-- Nav Item - Utilities Collapse Menu -->
        <li class="nav-item">
            <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseUtilities"
               aria-expanded="true" aria-controls="collapseUtilities">
                <img src="~/icons/edit.png" class="subicon" />
                <span>產品管理</span>
            </a>
            <div id="collapseUtilities" class="collapse" aria-labelledby="headingUtilities"
                 data-parent="#accordionSidebar">
                <div class="bg-white py-2 collapse-inner rounded">
                    <a class="collapse-item" href="~/Product/List">產品列表</a>
                    <a class="collapse-item" href="~/Product/Create">新增產品</a>
                    <a class="collapse-item" href="~/Trip/List">產品日期</a>
                </div>
            </div>
        </li>
        <li class="nav-item">
            <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseAnalyze"
               aria-expanded="true" aria-controls="collapseAnalyze">
                <img src="~/icons/company.png" class="subicon" />
                <span>數據分析</span>
            </a>
            <div id="collapseAnalyze" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
                <div class="bg-white py-2 collapse-inner rounded">
                    <a class="collapse-item" href="~/Analysis/SellAnalysis">銷售分析</a>
                </div>
            </div>
        </li>

    </ul>
    <!-- End of Sidebar -->
    <!-- Content Wrapper -->
    <div id="content-wrapper" class="d-flex flex-column">

        <!-- Main Content -->
        <div id="content">

            <!-- Begin Page Content -->
            
            <div class="container-fluid">
                <h2>產品行程</h2>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="card shadow mb-4">
                            <div class="card-header py-3">
                                <h6 class="m-0 font-weight-bold text-primary cardTitle">搜尋</h6>
                            </div>
                            <div class="card-body">
                                <div>
                                     <div>
                                        <label>產品類型</label>
                                        @* <select id="selecttype" class="form-select">
                                        @foreach (ProductTypeList type in Model.types )
                                        {
                                        <option value="@type.ProductTypeId">@type.ProductType</option>
                                        }
                                        </select> *@
                                        <div>
                                            @{
                                                int j = 0;
                                                foreach (ProductTypeList type in Model.types)
                                            {
                                                    <input class="typeradio" type="radio" value="@type.ProductTypeId" name="type" id="typeradio @j" />
                                                    <label for="typeradio @j" class="control-label">@type.ProductType</label>
                                                    j++;
                                                }
                                            }
                                        </div>
                                        <label>審核狀態</label>
                                        <div>
                                            <input class="statusradio" type="radio" value="1" name="status" id="statusradio1" />
                                            <label for="statusradio1" class="control-label">已審核</label>

                                            <input class="statusradio" type="radio" value="2" name="status" id="statusradio2" />
                                            <label for="statusradio2" class="control-label">待審核</label>

                                            <input class="statusradio" type="radio" value="3" name="status" id="statusradio3" />
                                            <label for="statusradio3" class="control-label">退審</label>

                                        </div>

                                    </div>

                                </div>
                               
                                
                            </div>
                        </div>
                    </div>
                </div>

                

                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary cardTitle">產品清單</h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>產品名稱</th>
                                        <th>產品類型</th>
                                        <th>審查狀況</th>
                                        <th>動作</th>
                                    </tr>
                                </thead>
                               
                                <tbody id="productlist">
                                   @foreach(var item in Model.cProductWraps)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(model =>item.ProductName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model =>item.productType)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model =>item.productStatus)
                                            </td>
                                            <td>
                                                <button  value="@item.ProductId" class="btn btn-primary btnDetail">現有行程</button>
                                                @* @Html.ActionLink("現有行程", "Create","Trip", new { id=item.ProductId },new {@class="btn btn-primary"}) *@
                                                @Html.ActionLink("新增", "Create","Trip", new { id=item.ProductId },new {@class="btn btn-primary"})
                                            </td>
                                        </tr>
                                    }
                                    </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="row">
                <div class="col-lg-6">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary cardTitle">搜尋</h6>
                        </div>
                        <div class="card-body">
                            <div>
                                <label>日期範圍</label>
                                    <input type="text" id="tripdates" class="form-control" />

                        </div>
                    </div>
                </div>
                </div>
                </div>

                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary cardTitle">行程列表</h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered" id="dataTable2" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>產品名稱</th>
                                        <th>產品類型</th>
                                        <th>產品日期</th>
                                        <th>天數</th>
                                        <th>
                                            <div>報名人數/</div>
                                            <div>人數上限</div>
                                        </th>
                                        <th>動作</th>
                                    </tr>
                                </thead>
                              
                                <tbody id="triptable">
                                  
                                      </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                        
               


            </div>
            <!-- /.container-fluid -->

          </div>
        <!-- End of Main Content -->


    </div>
    <!-- End of Content Wrapper -->

</div>
<!-- End of Page Wrapper -->
@section Styles{
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" />
    <style>
        .card-body {
            height: unset;
        }

        .cardTitle {
            font-size: 25px;
        }
    </style>
 }

 @section Scripts{
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script>new DataTable('#dataTable');
        new DataTable('#dataTable2');
    </script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        $('#tripdates').flatpickr({
            mode: "range",
            dateFormat: "Y-m-d"
        });
    </script>
 <script>
     async function loadTripTable(productID){
         const triptable = document.getElementById('triptable');
            const response = await fetch(`@Url.Content("~/Trip/LoadTripTable")?productID=${productID}`);
         const datas = await response.json();
         if (datas != null) {
             console.log(datas)
             const rows = datas.map(row => {
                 const { tripID, tripName, tripType, stock, tripDay, tripDate } = row
                 return (
                     ` <tr>
                              <td>${tripName}</td>
                               <td>${tripType}</td>
                                <td>${tripDate}</td>
                                <td>${tripDay}</td>
                                <td>${stock}</td>
                                  <td>
                                         <a href="@Url.Content("~/Trip/Edit")?tripID=${tripID}" class="btn btn-success">編輯</a>
                                  </td>
                          </tr>`
                 )
             })
             triptable.innerHTML = rows.join("");
         }
     }

     async function queryByType(typeID){
            const productlist = document.getElementById('productlist');
            const response = await fetch(`@Url.Content("~/Trip/queryByType")?typeID=${typeID}`);
            const datas = await response.json();
            if(datas!=null){
                console.log(datas)
                const rows = datas.map(row=>{
                    const{productID,productName,productType,productStatus}=row
                    return(
                        ` <tr>
                                              <td>${productName}</td>
                                               <td>${productType}</td>
                                                <td>${productStatus}</td>
                                                <td><button  value="${productID}" class="btn btn-primary btnDetail">現有行程</button></td>
                                          <td>
                                                   <a href="@Url.Content("~/Trip/Create")?id=${productID}" class="btn btn-primary">編輯</a>
                                          </td>
                                  </tr>`
                    )
                })
                productlist.innerHTML = rows.join("");
            }
     }

     async function queryByStatus(statusID){
            const productlist = document.getElementById('productlist');
            const response = await fetch(`@Url.Content("~/Trip/queryByStatus")?statusID=${statusID}`);
            const datas = await response.json();
            if (datas != null) {
            const rows = datas.map(row=>{
             const { productID, productName, productType, productStatus } = row
             return(
                    ` <tr>
                                                      <td>${productName}</td>
                                                       <td>${productType}</td>
                                                        <td>${productStatus}</td>
                                                        <td><button  value="${productID}" class="btn btn-primary btnDetail">現有行程</button></td>
                                                  <td>
                                                           <a href="@Url.Content("~/Trip/Create")?id=${productID}" class="btn btn-primary">編輯</a>
                                                  </td>
                                          </tr>`
             )
                
                 });
            productlist.innerHTML = rows.join("");
            }

     }

        async function queryByDate(dates) {
            const triptable = document.getElementById('triptable');
            const response = await fetch(`@Url.Content("~/Trip/queryByDate")?dates=${dates}`);
            const datas = await response.json();
            if (datas != null) {
                const rows = datas.map(row => {
                    const { tripID, tripName, tripType, stock, tripDay, tripDate } = row
                    return (
                        ` <tr>
                                      <td>${tripName}</td>
                                       <td>${tripType}</td>
                                        <td>${tripDate}</td>
                                        <td>${tripDay}</td>
                                        <td>${stock}</td>
                                          <td>
                                                 <a href="@Url.Content("~/Trip/Edit")?tripID=${tripID}" class="btn btn-success">編輯</a>
                                          </td>
                                  </tr>`
                    )

                })
                triptable.innerHTML = rows.join("");
            }
        }
      
     $('.btnDetail').click(function () {
         var productID = $(this).val();
            loadTripTable(productID);

     });

        $('.typeradio').change(function(){
        var typeID = $(this).val();
        queryByType(typeID);
        });

        $('.statusradio').change(function () {
            var statusID = $(this).val();
            queryByStatus(statusID);
        });

        var inputValue = ""; // 用于存储输入的值
        var changeCount = 0; // 用于计数值改变的次数

        $('#tripdates').change(function () {

            var currentInputValue = $(this).val();

            // 检查当前值是否与之前的值不同
            if (currentInputValue !== inputValue) {
                changeCount++; // 值改变次数加1
                inputValue = currentInputValue; // 更新存储的值

                // 当值改变两次时触发事件
                if (changeCount === 2) {
                    var dates = $(this).val();
                    queryByDate(dates);

                    // 在这里执行其他操作，根据输入的值进行不同的处理

                    // 重置计数器，以便下一次触发事件
                    changeCount = 0;
                }
            }


        });

 </script>
 }

